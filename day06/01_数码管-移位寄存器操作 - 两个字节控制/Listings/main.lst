C51 COMPILER V9.60.7.0   MAIN                                                              06/28/2024 09:06:39 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\AppData\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "Config.h"
   2          #include "GPIO.h"
   3          
   4          // 数据信号
   5          #define NIX_DI P44
   6          // 移位信号
   7          #define NIX_RCK P43
   8          // 锁存信号
   9          #define NIX_SCK P42
  10          
  11          void gpio_config() {
  12   1        // 初始化数码管控制引脚
  13   1        P4_MODE_OUT_PP(GPIO_P2 | GPIO_P3 | GPIO_P4);
  14   1      }
  15          
  16          // 记录字母位(控制要显示什么内容)
  17          u8 letter = 0x02; // 数字6 -> 0000 0010
  18          // 记录数字位(控制哪个数码管显示内容)
  19          u8 digital = 0x0A; // 0000 1010(左侧两个数码管点亮)
  20          
  21          #define GET_BIT_VALUE(byte, pos) (byte & (1 << pos))
  22          
  23          int main(void) {
  24   1        char i;
  25   1        gpio_config();
  26   1      
  27   1        // 1.先发送字母位(控制显示内容,至高位7是控制数码管右侧点的)
  28   1        // 1 111 1000 --> 7
  29   1        for (i = 7; i >= 0; i--) { //(二进制位是从右往左写的)
  30   2          // 获取预先定义的位数据，输出到芯片进行控制
  31   2          NIX_DI = GET_BIT_VALUE(letter, i);
  32   2          // 寄存器的移位操作
  33   2          NIX_RCK = 0;
  34   2          NOP2();
  35   2          NIX_RCK = 1;
  36   2          NOP2();
  37   2        }
  38   1      
  39   1        // 2.再发送数字位(控制哪个位置点亮)
  40   1        // 1111 1011 -> 7.7.空 7. 7.7.7.7 (二进制位是从右往左写的)
  41   1        for (i = 7; i >= 0; i--) {
  42   2          // 获取预先定义的位数据，输出到芯片进行控制
  43   2          NIX_DI = GET_BIT_VALUE(digital, i);
  44   2          // 寄存器的移位操作
  45   2          NIX_RCK = 0;
  46   2          NOP2();
  47   2          NIX_RCK = 1;
  48   2          NOP2();
  49   2        }
  50   1      
  51   1        // 3.锁存操作(制造上升沿)
  52   1        NIX_SCK = 0;
  53   1        NOP2();
  54   1        NIX_SCK = 1;
C51 COMPILER V9.60.7.0   MAIN                                                              06/28/2024 09:06:39 PAGE 2   

  55   1        NOP2();
  56   1      
  57   1        while (1) {
  58   2        }
  59   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    110    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
