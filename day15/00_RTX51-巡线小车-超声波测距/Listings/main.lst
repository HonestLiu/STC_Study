C51 COMPILER V9.60.7.0   MAIN                                                              07/10/2024 22:24:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\AppData\Keil_v5\C51\BIN\C51.EXE User\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib) DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "../Drive/Key.h"
   2          #include "../Drive/Light.h"
   3          #include "../Drive/battery.h"
   4          #include "../Drive/Buzzer.h"
   5          #include "../Drive/Ultrasonic.h"
   6          #include "../Lib/Config.h"
   7          #include "../Lib/UART.h"
   8          #include "../Lib/NVIC.h"
   9          #include "../Lib/Switch.h"
  10          #include "RTX51TNY.h" //RTX51的系统头文件
  11          
  12          
  13          void UART_config(void) {
  14   1        // >>> 记得添加 NVIC.c, UART.c, UART_Isr.c <<<
  15   1          COMx_InitDefine   COMx_InitStructure;         //结构定义
  16   1          COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
  17   1          COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串
             -口2固定使用BRT_Timer2)
  18   1          COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率, 一般 110 ~ 115200
  19   1          COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  20   1          COMx_InitStructure.BaudRateDouble = DISABLE;      //波特率加倍, ENABLE或DISABLE
  21   1          UART_Configuration(UART1, &COMx_InitStructure);   //初始化串口1 UART1,UART2,UART3,UART4
  22   1      
  23   1          NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,P
             -riority_2,Priority_3
  24   1          UART1_SW(UART1_SW_P30_P31);   // 引脚选择, UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_
             -P43_P44
  25   1      }
  26          
  27          void sys_init() {
  28   1        EAXSFR();
  29   1      
  30   1        UART_config();//初始化UART
  31   1        Light_init();//初始化转向灯
  32   1        KEY_init();//初始化按钮
  33   1        Battery_init(); // 初始化ADC电源检测
  34   1        buzzer_init();  // 初始化蜂鸣器
  35   1        Ultrasonic_init();//初始化超声波模块
  36   1      
  37   1        EA = 1;
  38   1      }
  39          
  40          void start() _task_ 0 {
  41   1        sys_init();
  42   1        os_create_task(1); // 创建任务1
  43   1                           // os_create_task(2);//创建任务2
  44   1      
  45   1        // 销毁自己
  46   1        os_delete_task(0);
  47   1      }
  48          
  49          void KEY_down() {
  50   1        char dis_res = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              07/10/2024 22:24:02 PAGE 2   

  51   1        float voltage;//ADC检测结果返回值
  52   1        float distance; // 超声波测距返回结果
  53   1      
  54   1        Light_on(ALL);
  55   1      
  56   1        Battery_get_voltage(&voltage); // 获取电源ADC检测结果
  57   1      
  58   1        buzzer_beep(); // 无源蜂鸣器发出声音
  59   1      
  60   1        dis_res = Ultrasonic_get_distance(&distance);
  61   1        if (dis_res == 0)
  62   1        {
  63   2          printf("距离获取成功: %.2f cm\n", distance);
  64   2        }else if (dis_res == 1)
  65   1        {
  66   2          printf("小于可测距离: %.2f cm\n",distance);
  67   2        }else if (dis_res == 2)
  68   1        {
  69   2          printf("大于可测距离: %.2f cm\n",distance);
  70   2        }else
  71   1        {
  72   2          printf("距离获取失败,count:%.d dis:%.2f\n",(int)dis_res,distance);
  73   2        }
  74   1        
  75   1        }
  76          
  77          void KEY_up() { Light_off(ALL); }
  78          
  79          void task1() _task_ 1 {
  80   1      
  81   1        while (1) {
  82   2          KEY_scan();
  83   2          os_wait2(K_TMO, 2);
  84   2        }
  85   1      }
  86          
  87            /* void task2() _task_ 2 {
  88          
  89              while (1) {
  90          
  91              }
  92            } */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    210    ----
   CONSTANT SIZE    =    102    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
