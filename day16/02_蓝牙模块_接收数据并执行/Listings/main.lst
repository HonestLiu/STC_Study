C51 COMPILER V9.60.7.0   MAIN                                                              07/13/2024 20:52:07 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\AppData\Keil_v5\C51\BIN\C51.EXE User\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          // 外部设备
   2          #include "../Drive/Key.h"
   3          #include "../Drive/Light.h"
   4          #include "../Drive/Motors.h"
   5          #include "../Drive/Track.h"
   6          #include "../Drive/Ultrasonic.h"
   7          #include "../Drive/battery.h"
   8          #include "../Drive/Buzzer.h"
   9          
  10          // 片上外设
  11          #include "../Lib/Config.h"
  12          #include "../Lib/GPIO.h"
  13          #include "../Lib/NVIC.h"
  14          #include "../Lib/Switch.h"
  15          #include "../Lib/UART.h"
  16          
  17          #include "RTX51TNY.h" //RTX51的系统头文件
  18          
  19          static void GPIO_config() {
  20   1        GPIO_InitTypeDef gpio_init_struct;
  21   1        gpio_init_struct.Mode = GPIO_PullUp;
  22   1        gpio_init_struct.Pin = GPIO_Pin_1 | GPIO_Pin_0;
  23   1        GPIO_Inilize(GPIO_P1, &gpio_init_struct);
  24   1      }
  25          
  26          void UART_config(void) {
  27   1      
  28   1        /* UART1初始化 ―― PC to MCU */
  29   1        COMx_InitDefine COMx_InitStructure;
  30   1        COMx_InitStructure.UART_Mode = UART_8bit_BRTx;
  31   1        COMx_InitStructure.UART_BRT_Use = BRT_Timer1;
  32   1        COMx_InitStructure.UART_BaudRate = 115200ul;
  33   1        COMx_InitStructure.UART_RxEnable = ENABLE;
  34   1        COMx_InitStructure.BaudRateDouble = DISABLE;
  35   1        UART_Configuration(UART1, &COMx_InitStructure);
  36   1        NVIC_UART1_Init(ENABLE, Priority_1);
  37   1        UART1_SW(UART1_SW_P30_P31);
  38   1      
  39   1        /* UART2初始化 ―― MCU to BlueTooth */
  40   1        COMx_InitStructure.UART_Mode = UART_8bit_BRTx;
  41   1        COMx_InitStructure.UART_BRT_Use = BRT_Timer2;
  42   1        COMx_InitStructure.UART_BaudRate = 9600ul; // 波特率, 蓝牙模块默认就是9600?
  43   1        COMx_InitStructure.UART_RxEnable = ENABLE;
  44   1        COMx_InitStructure.BaudRateDouble = DISABLE;
  45   1        UART_Configuration(UART2, &COMx_InitStructure);
  46   1        NVIC_UART2_Init(ENABLE, Priority_1);
  47   1        UART2_SW(UART2_SW_P10_P11);
  48   1      }
  49          
  50          void sys_init() {
  51   1        EAXSFR();
  52   1        // 片上外设初始化
  53   1        UART_config(); // 初始化UART
  54   1        GPIO_config();
C51 COMPILER V9.60.7.0   MAIN                                                              07/13/2024 20:52:07 PAGE 2   

  55   1      
  56   1        // 驱动初始化
  57   1        Light_init(); // 初始化转向灯
  58   1        KEY_init();   // 初始化按钮
  59   1        Battery_init();    // 初始化ADC电源检测
  60   1        buzzer_init();     // 初始化蜂鸣器
  61   1        Ultrasonic_init(); // 初始化超声波模块
  62   1        Track_init();      // 初始化巡线模块
  63   1        Motor_init();      // 初始化电机控制
  64   1      
  65   1        EA = 1;
  66   1      }
  67          
  68          #define UART1_TASK 2
  69          #define UART2_TASK 3
  70          
  71          void start_main() _task_ 0 {
  72   1        sys_init();
  73   1        os_create_task(1); // 创建按键任务
  74   1        os_create_task(UART1_TASK);
  75   1        os_create_task(UART2_TASK);
  76   1      
  77   1        // 销毁自己
  78   1        os_delete_task(0);
  79   1      }
  80          
  81          u8 track_state = 0; // 巡线功能状态 0：未启用 1:已启用
  82          void KEY_down() { Light_on(ALL); }
  83          
  84          void KEY_up() { Light_off(ALL); }
  85          
  86          void task_Key() _task_ 1 {
  87   1      
  88   1        while (1) {
  89   2          KEY_scan();
  90   2          os_wait2(K_TMO, 2);
  91   2        }
  92   1      }
  93          
  94          // 从PC端接收数据，并将数据发送给蓝牙模块
  95          void task_uart1() _task_ UART1_TASK {
  96   1        u8 i;
  97   1        while (1) {
  98   2          if (COM1.RX_TimeOut > 0) {
  99   3            // 超时计数
 100   3            if (--COM1.RX_TimeOut == 0) {
 101   4              if (COM1.RX_Cnt > 0) {
 102   5                // 这里处理收到的数据，做具体的逻辑，可以调用自己的on_uart1_recv
 103   5                for (i = 0; i < COM1.RX_Cnt; i++) {
 104   6                  // 写出数据到蓝牙
 105   6                  TX2_write2buff(RX1_Buffer[i]);
 106   6                  TX1_write2buff(RX1_Buffer[i]);
 107   6                }
 108   5              }
 109   4              COM1.RX_Cnt = 0;
 110   4            }
 111   3          }
 112   2          os_wait2(K_TMO, 2);
 113   2        }
 114   1      }
 115          
 116          void bt_controller() {
C51 COMPILER V9.60.7.0   MAIN                                                              07/13/2024 20:52:07 PAGE 3   

 117   1        u8 dat = RX2_Buffer[0];
 118   1        
 119   1        if (dat == 0x01) {//前进
 120   2          Motor_forward(70);
 121   2        }else if (dat == 0x02)//后退
 122   1        {
 123   2          Motor_backward(70);
 124   2        }else if (dat == 0x03)
 125   1        { 
 126   2          Motor_stop();
 127   2        }else if (dat == 0x04)//开灯
 128   1        {
 129   2          Light_on(ALL);
 130   2          buzzer_beep();
 131   2        }else if (dat == 0x05)//关灯
 132   1        {
 133   2          Light_off(ALL);
 134   2          buzzer_beep();
 135   2        }
 136   1      }
 137          
 138          // 接收蓝牙模块发送回来的数据，并将数据发送给PC
 139          void task_uart2() _task_ UART2_TASK {
 140   1        u8 i;
 141   1        while (1) {
 142   2          if (COM2.RX_TimeOut > 0) {
 143   3            // 超时计数
 144   3            if (--COM2.RX_TimeOut == 0) {
 145   4              if (COM2.RX_Cnt > 0) {
 146   5                bt_controller();
 147   5                for (i = 0; i < COM2.RX_Cnt; i++) {
 148   6                  // 写出数据到PC
 149   6                  TX1_write2buff(RX2_Buffer[i]);
 150   6                }
 151   5              }
 152   4              COM2.RX_Cnt = 0;
 153   4            }
 154   3          }
 155   2          os_wait2(K_TMO, 2);
 156   2        }
 157   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    447    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
