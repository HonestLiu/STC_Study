C51 COMPILER V9.60.7.0   OLED                                                              07/04/2024 16:56:56 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\AppData\Keil_v5\C51\BIN\C51.EXE oled.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          
   2          #include "oled.h"
   3          #include "oledfont.h"
   4          #include "I2C.h"
   5          //OLED的显存
   6          //存放格式如下.
   7          //[0]0 1 2 3 ... 127  
   8          //[1]0 1 2 3 ... 127  
   9          //[2]0 1 2 3 ... 127  
  10          //[3]0 1 2 3 ... 127  
  11          //[4]0 1 2 3 ... 127  
  12          //[5]0 1 2 3 ... 127  
  13          //[6]0 1 2 3 ... 127  
  14          //[7]0 1 2 3 ... 127
  15          
  16          //新的STC8H中已经集成该函数，为避免冲突，故将其进行注释
  17          /*void delay_ms(unsigned int ms)
  18          {                         
  19            unsigned int a;
  20            while(ms)
  21            {
  22              a=1800;
  23              while(a--);
  24              ms--;
  25            }
  26            return;
  27          }*/
  28          
  29          //反显函数
  30          void OLED_ColorTurn(u8 i)
  31          {
  32   1        if(i==0)
  33   1          {
  34   2            OLED_WR_Byte(0xA6,OLED_CMD);//正常显示
  35   2          }
  36   1        if(i==1)
  37   1          {
  38   2            OLED_WR_Byte(0xA7,OLED_CMD);//反色显示
  39   2          }
  40   1      }
  41          
  42          //屏幕旋转180度
  43          void OLED_DisplayTurn(u8 i)
  44          {
  45   1        if(i==0)
  46   1          {
  47   2            OLED_WR_Byte(0xC8,OLED_CMD);//正常显示
  48   2            OLED_WR_Byte(0xA1,OLED_CMD);
  49   2          }
  50   1        if(i==1)
  51   1          {
  52   2            OLED_WR_Byte(0xC0,OLED_CMD);//反转显示
  53   2            OLED_WR_Byte(0xA0,OLED_CMD);
  54   2          }
C51 COMPILER V9.60.7.0   OLED                                                              07/04/2024 16:56:56 PAGE 2   

  55   1      }
  56          
  57          
  58          //延时
  59          void IIC_delay(void)
  60          {
  61   1        u8 t=1;
  62   1        while(t--);
  63   1      }
  64          
  65          //起始信号
  66          void I2C_Start(void)
  67          {
  68   1        OLED_SDA_Set();
  69   1        OLED_SCL_Set();
  70   1        IIC_delay();
  71   1        OLED_SDA_Clr();
  72   1        IIC_delay();
  73   1        OLED_SCL_Clr();
  74   1         
  75   1      }
  76          
  77          //结束信号
  78          void I2C_Stop(void)
  79          {
  80   1        OLED_SDA_Clr();
  81   1        OLED_SCL_Set();
  82   1        IIC_delay();
  83   1        OLED_SDA_Set();
  84   1      }
  85          
  86          //等待信号响应
  87          void I2C_WaitAck(void) //测数据信号的电平
  88          {
  89   1        OLED_SDA_Set();
  90   1        IIC_delay();
  91   1        OLED_SCL_Set();
  92   1        IIC_delay();
  93   1        OLED_SCL_Clr();
  94   1        IIC_delay();
  95   1      }
  96          
  97          //写入一个字节
  98          void Send_Byte(u8 dat)
  99          {
 100   1        u8 i;
 101   1        for(i=0;i<8;i++)
 102   1        {
 103   2          OLED_SCL_Clr();//将时钟信号设置为低电平
 104   2          if(dat&0x80)//将dat的8位从最高位依次写入
 105   2          {
 106   3            OLED_SDA_Set();
 107   3          }
 108   2          else
 109   2          {
 110   3            OLED_SDA_Clr();
 111   3          }
 112   2          IIC_delay();
 113   2          OLED_SCL_Set();
 114   2          IIC_delay();
 115   2          OLED_SCL_Clr();
 116   2          dat<<=1;
C51 COMPILER V9.60.7.0   OLED                                                              07/04/2024 16:56:56 PAGE 3   

 117   2        }
 118   1      }
 119          
 120          //发送一个字节
 121          //向SSD1306写入一个字节。
 122          //mode:数据/命令标志 0,表示命令;1,表示数据;
 123          //软件实现版本
 124          /*void OLED_WR_Byte(u8 dat,u8 mode)
 125          {
 126            I2C_Start();
 127            Send_Byte(0x78);
 128            I2C_WaitAck();
 129            if(mode){
 130                  Send_Byte(0x40);
 131              }
 132              else{
 133                  Send_Byte(0x00);
 134              }
 135            I2C_WaitAck();
 136            Send_Byte(dat);
 137            I2C_WaitAck();
 138            I2C_Stop();
 139          }*/
 140          
 141          //硬件实现版本
 142          void OLED_WR_Byte(u8 dat,u8 mode){
 143   1          //通过mode判断是命令还是数据，进入使用I2C函数写入到不同的位置
 144   1          if(mode){//发送数据
 145   2              I2C_WriteNbyte(0x78,0x40,&dat,1);
 146   2          }else{//发送命令
 147   2              I2C_WriteNbyte(0x78,0x00,&dat,1);
 148   2          }
 149   1      }
 150          
 151          //坐标设置
 152          
 153          void OLED_Set_Pos(u8 x, u8 y) 
 154          { 
 155   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 156   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 157   1        OLED_WR_Byte((x&0x0f),OLED_CMD);
 158   1      }       
 159          //开启OLED显示    
 160          void OLED_Display_On(void)
 161          {
 162   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 163   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 164   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 165   1      }
 166          //关闭OLED显示     
 167          void OLED_Display_Off(void)
 168          {
 169   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 170   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 171   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 172   1      }            
 173          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 174          void OLED_Clear(void)  
 175          {  
 176   1        u8 i,n;       
 177   1        for(i=0;i<8;i++)  
 178   1        {  
C51 COMPILER V9.60.7.0   OLED                                                              07/04/2024 16:56:56 PAGE 4   

 179   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 180   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 181   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 182   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 183   2        } //更新显示
 184   1      }
 185          
 186          //在指定位置显示一个字符,包括部分字符
 187          //x:0~127
 188          //y:0~63         
 189          //sizey:选择字体 6x8  8x16
 190          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 sizey)
 191          {       
 192   1        u8 c=0,sizex=sizey/2;
 193   1        u16 i=0,size1;
 194   1        if(sizey==8)size1=6;
 195   1        else size1=(sizey/8+((sizey%8)?1:0))*(sizey/2);
 196   1        c=chr-' ';//得到偏移后的值
 197   1        OLED_Set_Pos(x,y);
 198   1        for(i=0;i<size1;i++)
 199   1        {
 200   2          if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
 201   2          if(sizey==8) OLED_WR_Byte(asc2_0806[c][i],OLED_DATA);//6X8字号
 202   2          else if(sizey==16) OLED_WR_Byte(asc2_1608[c][i],OLED_DATA);//8x16字号
 203   2      //    else if(sizey==xx) OLED_WR_Byte(asc2_xxxx[c][i],OLED_DATA);//用户添加字号
 204   2          else return;
 205   2        }
 206   1      }
 207          //m^n函数
 208          u32 oled_pow(u8 m,u8 n)
 209          {
 210   1        u32 result=1;  
 211   1        while(n--)result*=m;    
 212   1        return result;
 213   1      }         
 214          //显示数字
 215          //x,y :起点坐标
 216          //num:要显示的数字
 217          //len :数字的位数
 218          //sizey:字体大小      
 219          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 sizey)
 220          {           
 221   1        u8 t,temp,m=0;
 222   1        u8 enshow=0;
 223   1        if(sizey==8)m=2;
 224   1        for(t=0;t<len;t++)
 225   1        {
 226   2          temp=(num/oled_pow(10,len-t-1))%10;
 227   2          if(enshow==0&&t<(len-1))
 228   2          {
 229   3            if(temp==0)
 230   3            {
 231   4              OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey);
 232   4              continue;
 233   4            }else enshow=1;
 234   3          }
 235   2          OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey);
 236   2        }
 237   1      }
 238          //显示一个字符号串
 239          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 sizey)
 240          {
C51 COMPILER V9.60.7.0   OLED                                                              07/04/2024 16:56:56 PAGE 5   

 241   1        u8 j=0;
 242   1        while (chr[j]!='\0')
 243   1        {   
 244   2          OLED_ShowChar(x,y,chr[j++],sizey);
 245   2          if(sizey==8)x+=6;
 246   2          else x+=sizey/2;
 247   2        }
 248   1      }
 249          //显示汉字
 250          void OLED_ShowChinese(u8 x,u8 y,u8 no,u8 sizey)
 251          {
 252   1        u16 i,size1=(sizey/8+((sizey%8)?1:0))*sizey;
 253   1        for(i=0;i<size1;i++)
 254   1        {
 255   2          if(i%sizey==0) OLED_Set_Pos(x,y++);
 256   2          if(sizey==16) OLED_WR_Byte(Hzk[no][i],OLED_DATA);//16x16字号
 257   2      //    else if(sizey==xx) OLED_WR_Byte(xxx[c][i],OLED_DATA);//用户添加字号
 258   2          else return;
 259   2        }       
 260   1      }
 261          
 262          
 263          //显示图片
 264          //x,y显示坐标
 265          //sizex,sizey,图片长宽
 266          //BMP：要显示的图片
 267          void OLED_DrawBMP(u8 x,u8 y,u8 sizex, u8 sizey,u8 BMP[])
 268          {   
 269   1        u16 j=0;
 270   1        u8 i,m;
 271   1        sizey=sizey/8+((sizey%8)?1:0);
 272   1        for(i=0;i<sizey;i++)
 273   1        {
 274   2          OLED_Set_Pos(x,i+y);
 275   2          for(m=0;m<sizex;m++)
 276   2          {      
 277   3            OLED_WR_Byte(BMP[j++],OLED_DATA);       
 278   3          }
 279   2        }
 280   1      } 
 281          
 282          
 283          
 284          //初始化            
 285          void OLED_Init(void)
 286          {
 287   1      //  OLED_RES_Clr();
 288   1      //  delay_ms(200);
 289   1      //  OLED_RES_Set();
 290   1        
 291   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 292   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 293   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 294   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 295   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 296   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 297   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 298   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 299   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 300   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 301   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 302   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
C51 COMPILER V9.60.7.0   OLED                                                              07/04/2024 16:56:56 PAGE 6   

 303   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 304   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 305   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 306   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 307   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 308   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 309   1        OLED_WR_Byte(0x12,OLED_CMD);
 310   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 311   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 312   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 313   1        OLED_WR_Byte(0x02,OLED_CMD);//
 314   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 315   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 316   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 317   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 318   1        OLED_Clear();
 319   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 320   1      }
 321          
 322          
 323          
 324          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1529    ----
   CONSTANT SIZE    =   2296    ----
   XDATA SIZE       =   ----      60
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
