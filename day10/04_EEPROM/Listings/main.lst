C51 COMPILER V9.60.7.0   MAIN                                                              07/05/2024 16:00:01 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\AppData\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "Config.h"
   2          #include "GPIO.h"
   3          #include "UART.h"
   4          #include "EEPROM.h"
   5          #include "Delay.h"
   6          #include "NVIC.h"
   7          #include "Switch.h"
   8          #include <string.h>
   9          
  10          /******************* IO≈‰÷√∫Ø ˝ *******************/
  11          void GPIO_config(void) {
  12   1          GPIO_InitTypeDef GPIO_InitStructure;        //Ω·ππ∂®“Â
  13   1      
  14   1          GPIO_InitStructure.Pin = GPIO_Pin_0 | GPIO_Pin_1;        //÷∏∂®“™≥ı ºªØµƒIO, GPIO_Pin_0 ~ GPIO_Pin_7
  15   1          GPIO_InitStructure.Mode = GPIO_PullUp;    //÷∏∂®IOµƒ ‰»ÎªÚ ‰≥ˆ∑Ω Ω,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,
             -GPIO_OUT_PP
  16   1          GPIO_Inilize(GPIO_P3, &GPIO_InitStructure);    //≥ı ºªØ
  17   1      }
  18          
  19          //≥ı ºªØUART
  20          void UART_config(void) {
  21   1          // >>> º«µ√ÃÌº” NVIC.c, UART.c, UART_Isr.c <<<
  22   1          COMx_InitDefine COMx_InitStructure;                    //Ω·ππ∂®“Â
  23   1          COMx_InitStructure.UART_Mode = UART_8bit_BRTx;    //ƒ£ Ω, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UAR
             -T_9bit_BRTx
  24   1          COMx_InitStructure.UART_BRT_Use = BRT_Timer1;            //—°‘Ò≤®Ãÿ¬ ∑¢…˙∆˜, BRT_Timer1, BRT_Timer2 (◊
             -¢“‚: ¥Æø⁄2πÃ∂® π”√BRT_Timer2)
  25   1          COMx_InitStructure.UART_BaudRate = 115200ul;            //≤®Ãÿ¬ , “ª∞„ 110 ~ 115200
  26   1          COMx_InitStructure.UART_RxEnable = ENABLE;                //Ω” ’‘ –Ì,   ENABLEªÚDISABLE
  27   1          COMx_InitStructure.BaudRateDouble = DISABLE;            //≤®Ãÿ¬ º”±∂, ENABLEªÚDISABLE
  28   1          UART_Configuration(UART1, &COMx_InitStructure);        //≥ı ºªØ¥Æø⁄1 UART1,UART2,UART3,UART4
  29   1      
  30   1          NVIC_UART1_Init(ENABLE,
  31   1                          Priority_1);        //÷–∂œ πƒ‹, ENABLE/DISABLE; ”≈œ»º∂(µÕµΩ∏ﬂ) Priority_0,Priority_1,P
             -riority_2,Priority_3
  32   1          UART1_SW(UART1_SW_P30_P31);        // “˝Ω≈—°‘Ò, UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UAR
             -T1_SW_P43_P44
  33   1      }
  34          
  35          #define     Max_Length          100      //∂¡–¥EEPROMª∫≥Â≥§∂»
  36          u8 xdata tmp[Max_Length];        //EEPROM≤Ÿ◊˜ª∫≥Â
  37          
  38          int main() {
  39   1          //“™≤Ÿ◊˜…»«¯µƒ∆ ºµÿ÷∑
  40   1          u16 addr_sector = 0x0040;
  41   1          //“™¥Ê¥¢µƒ◊÷∑˚¥Æ
  42   1          char *str = "Doraemon";
  43   1          u16 str_len = strlen(str);
  44   1      
  45   1          //EAXSFR();   /* ¿©’πºƒ¥Ê∆˜∑√Œ  πƒ‹ */
  46   1          GPIO_config();
  47   1          UART_config();
  48   1          EA = 1;// ßƒ‹÷–∂œ
  49   1      
C51 COMPILER V9.60.7.0   MAIN                                                              07/05/2024 16:00:01 PAGE 2   

  50   1      
  51   1          //≤¡≥˝…»«¯£¨“ª¥Œ–‘≤¡≥˝“ª∏ˆ…»«¯512◊÷Ω⁄£¨¥”0x0000ø™ ºµΩ0x01FF
  52   1          EEPROM_SectorErase(addr_sector);
  53   1          //–¥»Î ˝æ›£¨String\int\long\float
  54   1          EEPROM_write_n(addr_sector, str, str_len);
  55   1          //¥”…»«¯∂¡»° ˝æ›
  56   1          EEPROM_read_n(addr_sector, tmp, str_len);
  57   1      
  58   1      
  59   1          printf("–¥»Îµƒ◊÷∑˚¥Æ:%s\n", str);
  60   1          //Œ™¥Ê¥¢∂¡»°◊÷∑˚¥Æµƒ ˝◊ÈÃÌº”◊÷∑˚¥ÆΩ· ¯∑˚£¨±‹√‚≥ˆœ÷¥ÌŒÛ
  61   1          tmp[str_len] = '\0';
  62   1          printf("∂¡µΩµƒ◊÷∑˚¥ÆŒ™:%s\n", tmp);
  63   1      
  64   1          while (1) {
  65   2              printf("∂¡µΩµƒ◊÷∑˚¥ÆŒ™:%s\n", tmp);
  66   2              delay_ms(250);
  67   2              delay_ms(250);
  68   2              delay_ms(250);
  69   2              delay_ms(250);
  70   2          }
  71   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    229    ----
   CONSTANT SIZE    =     45    ----
   XDATA SIZE       =    100    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
